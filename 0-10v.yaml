# See : https://pidexplained.com/pid-controller-explained/ for information about a PID

substitutions:
  devicename: "0-10v"
  friendly_devicename:  0-10V PWM Output


esphome:
  name: 0-10v

esp32:
  board: esp32dev
  framework:
    type: arduino

# Enable logging
logger:
  level: debug

# Enable Home Assistant API
api:
  encryption:
    key: "tTOpi3w79QCTTAsZi/t+zJiqdbmRlRIndk3/gP1xEEc="

ota:
  password: "b580c130f133025b211fab0d5ef39a88"

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "${devicename}"
    password: "daMKePH5xQys"

captive_portal:

web_server:
  port: 80


dallas:
  - pin: GPIO14
    update_interval: 3s
 
      
    
output:
  - platform: ledc
    pin: GPIO19
    frequency: 10000 Hz
    id: pwm

climate:
  - platform: pid
    name: "${devicename} PID Controller"
    id: pid_climate
    visual:
      min_temperature: 15
      max_temperature: 45
      temperature_step: 0.5
    sensor: aanv_sensor
    default_target_temperature: 35   ## Temperature is set on boot.
    heat_output: pwm
#    cool_output: pwm 
    control_parameters:
      kp: 0.49460                     
      ki: 0.00487
      kd: 12.56301
      output_averaging_samples: 1      # smooth the output over 5 samples
      derivative_averaging_samples: 1  # smooth the derivative value over 10 samples
    deadband_parameters:
      threshold_high: 0.5°C       # deadband within +/-0.5°C of target_temperature
      threshold_low: -0.5°C

sensor:
  - platform: dallas
    address: 0x2900000019dd5028
    name: "${devicename} Aanvoer temperatuur"
    id: aanv_sensor
  - platform: pid
    name: "${devicename} PID Result"
    type: RESULT
  - platform: pid
    name: "${devicename} PID KP"
    type: KP
  - platform: pid
    name: "${devicename} PID KI"
    type: KI
  - platform: pid
    name: "${devicename} PID KP"
    type: KP
  - platform: pid
    name: "${devicename} PID HEAT"  ## is Equal to te 0-10V output, 75% HEAT should give around 7.5 V output.
    type: HEAT 

button:
  - platform: template
    name: "PID Autotune"
    on_press:
      - climate.pid.autotune: pid_climate  ###  https://esphome.io/components/climate/pid.html#autotuning


## use these to force a output value, and use a multimeter to measure and the adjustmentscrew to adjust the output voltage.
switch:
  - platform: gpio
    name: "test pwm 50%"
    pin: 2  # there is actually nothing connected here
    on_turn_on:
      then:
        - output.set_level:
            id: pwm
            level: 50%
  - platform: gpio
    name: "test pwm 75%"
    pin: 2  # there is actually nothing connected here
    on_turn_on:
      then:
        - output.set_level:
            id: pwm
            level: 75%            